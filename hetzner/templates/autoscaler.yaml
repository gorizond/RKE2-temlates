apiVersion: catalog.cattle.io/v1
kind: App
metadata:
  name: {{ .Values.cluster.name }}-autoscaler
  namespace: fleet-default
spec:
  name: {{ .Values.cluster.name }}-autoscaler
  namespace: fleet-default
  helmVersion: 3
  chart:
    metadata:
      annotations:
        catalog.cattle.io/ui-source-repo: autoscaler
        catalog.cattle.io/ui-source-repo-type: cluster
      apiVersion: v2
      appVersion: 1.23.0
      description: Scales Kubernetes worker nodes within autoscaling groups.
      name: cluster-autoscaler
      type: application
      version: 9.21.1
  resources:
    - apiVersion: policy/v1
      kind: PodDisruptionBudget
      name: {{ .Values.cluster.name }}-autoscaler-clusterapi-cluster-autoscaler
      namespace: fleet-default
    - apiVersion: v1
      kind: ServiceAccount
      name: {{ .Values.cluster.name }}-autoscaler-clusterapi-cluster-autoscaler
      namespace: fleet-default
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      name: {{ .Values.cluster.name }}-autoscaler-clusterapi-cluster-autoscaler
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      name: {{ .Values.cluster.name }}-autoscaler-clusterapi-cluster-autoscaler
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      name: {{ .Values.cluster.name }}-autoscaler-clusterapi-cluster-autoscaler
      namespace: fleet-default
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      name: {{ .Values.cluster.name }}-autoscaler-clusterapi-cluster-autoscaler
      namespace: fleet-default
    - apiVersion: v1
      kind: Service
      name: {{ .Values.cluster.name }}-autoscaler-clusterapi-cluster-autoscaler
      namespace: fleet-default
    - apiVersion: apps/v1
      kind: Deployment
      name: {{ .Values.cluster.name }}-autoscaler-clusterapi-cluster-autoscaler
      namespace: fleet-default
  values:
    autoDiscovery:
      clusterName: {{ .Values.cluster.name }}
    cloudProvider: clusterapi
    extraArgs:
      balance-similar-node-groups: true
      clusterapi-cloud-config-authoritative: true
      cordon-node-before-terminating: true
      daemonset-eviction-for-empty-nodes: true
      kubeconfig: /etc/kubeconfig/value
      namespace: kube-system
      node-group-auto-discovery: clusterapi:clusterName={{ .Values.cluster.name }}
      skip-nodes-with-local-storage: false
      skip-nodes-with-system-pods: false
    extraVolumeSecrets:
      kubeconfig:
        mountPath: /etc/kubeconfig
        name: {{ .Values.cluster.name }}-kubeconfig
